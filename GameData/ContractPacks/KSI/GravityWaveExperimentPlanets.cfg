CONTRACT_TYPE
{
	name = LISA2
	sortKey = 02.Planets 
    title = Search for gravity waves above @targetBody
    genericTitle = Search for gravity waves above another planet

    group = KerbalScienceInnovations
    agent = KSI

	description = Launch a satellite with a gravity wave sensor into a high polar orbit near the edge of @targetBody 's SOI and run the experiment to listen for gravity wave events.
	genericDescription = Launch a satellite with a gravity wave sensor into a high polar orbit near the edge of a planet's SOI and run the experiment to listen for gravity wave events.

    notes = Complete the following:
    synopsis = Search for gravity waves.

    completedMessage = The probe has collected a lot of data and our scientists are keen to compare it to the data from around HomeWorld().

    minExpiry = 10.0
    maxExpiry = 20.0
    deadline = 426 * 10 // 10 years

    cancellable = true
    declinable = true

    autoAccept = false

    prestige = Significant // 2 star

    targetBody = @targetBody1

    maxCompletions = 0 // unlimited

    maxSimultaneous = 3

    rewardScience = 25.0 + Random(0.0, 35.0)
    rewardReputation = 10.0
    rewardFunds = 100000.0 + Random(0.0, 20000.0)
    failureReputation = 10.0
    failureFunds = 100000.0
    advanceFunds = 10000.0

	DATA // vessels with a gravity wave detector
	{
		type = List<Vessel>
		requiredValue = false
        lisaProbes = AllVessels().Where(v => v.Parts().Contains(KSIGravityWaveDetector))
	}

	DATA
	{
		type = List<CelestialBody>
		requiredValue = false
	}

	DATA
    {
		type = List<CelestialBody>
        requiredValue = false

		// planets that are not the home world
		validPlanets = AllBodies().Where(cb => (cb.IsPlanet() && cb != HomeWorld()))

		// which bodies have gravity wave probes around them?
		probeBodies = AllBodies().Where(body => @lisaProbes.Where(v => v.CelestialBody() == body).Count() > 0)

		// planets with no gravity wave probe around them
        validBodies = @validPlanets.Where(cb => !@probeBodies.Contains(cb))
    }

	DATA
    {
        type = CelestialBody
        uniquenessCheck = CONTRACT_ACTIVE
        hidden = true
		
        targetBody1 = @validBodies.Random() // pick a suitable planet at random
	}

    PARAMETER
    {
        name = VesselParameterGroup
        type = VesselParameterGroup

        title = Launch a science satellite
		
		PARAMETER
		{
			name = NewVessel
			type = NewVessel
		}

		PARAMETER
		{
			name = PartValidation
			type = PartValidation
			part = KSIGravityWaveDetector 
		}

		PARAMETER
		{
			name = Sequence
			type = Sequence

			PARAMETER
			{
				name = Orbit
				type = Orbit

				minInclination = 87.5 // polar orbit ± 2.5°
				maxInclination = 92.5

				minPeA = Round( @/targetBody.SphereOfInfluence() * 0.9, 1250000 ) // 90% of SOI
				minApA = Round( @/targetBody.SphereOfInfluence() * 0.9, 1250000 )
				maxApA = Round( @/targetBody.SphereOfInfluence(), 1250000 )
			}
			
			PARAMETER
			{
				// require the gravity wave experiment to be run
				name = CollectScience
				type = CollectScience
				title = Run the gravity wave experiment and wait 7 days before collecting the results
				targetBody = @/targetBody
				situation = InSpaceHigh
				experiment = KSIGravityWaveExperiment
				recoveryMethod = RecoverOrTransmit
			}
		}
    }

	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = LISA1 // home world experiment
	}
	
	REQUIREMENT
	{
		name = PartUnlocked
		type = PartUnlocked
		part = KSIGravityWaveDetector // the part name
	}


}
	